name: Rust Lint and Test

on: [push, pull_request]

env:
    CARGO_TERM_COLOR: always

jobs:
    build:
        runs-on: ubuntu-latest

        steps:
        - uses: actions/checkout@v3
        
        - name: Cache Cargo Dependencies
          uses: actions/cache@v3
          with:
            path: |
              ~/.cargo/registry
              ~/.cargo/git
              target
            key: cargo-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
            restore-keys: |
              cargo-${{ runner.os }}-

        - name: Deps
          run: |
                sudo apt-get update
                sudo apt-get install -y libudev-dev

        - name: Setup Rust Toolchain
          uses: actions-rs/toolchain@v1
          with:
            toolchain: nightly
            override: true
  
        - name: Toolchain in  nightly mode
          run: |
            rustup component add rustfmt --toolchain nightly
            rustup component add clippy --toolchain nightly

        - name: Install protc
          run: sudo apt install -y protobuf-compiler libprotobuf-dev
          
        - name: Install Mercurial
          run: sudo apt-get install -y mercurial
          
        - name: Set up IgH repo
          run: |
            hg clone http://hg.code.sf.net/p/etherlabmaster/code ethercat-hg
            cd ethercat-hg
            hg update stable-1.5
            ./bootstrap
            ./configure --disable-8139too

        - name: Enable Incremental Compilation
          run: export CARGO_INCREMENTAL=1
        - name: Install sccache
          run: |
            curl -fsSL https://api.github.com/repos/mozilla/sccache/releases/latest | \
            grep "browser_download_url.*sccache-.*-unknown-linux-musl" | \
            cut -d '"' -f 4 | wget -i - -O sccache
            chmod +x sccache
            mv sccache /usr/local/bin/
    
        - name: Check + Build + Test
          run: |
            export RUSTC_WRAPPER=sccache
            export CARGO_INCREMENTAL=1
            ETHERCAT_PATH=$(pwd)/ethercat-hg cargo check --all --tests 
            ETHERCAT_PATH=$(pwd)/ethercat-hg cargo build
            ETHERCAT_PATH=$(pwd)/ethercat-hg cargo test 
        
        - name: Format
          run: |
            ETHERCAT_PATH=$(pwd)/ethercat-hg cargo fmt --all -- --check
                
        - name: Lint
          run: |
            ETHERCAT_PATH=$(pwd)/ethercat-hg cargo clippy --all-targets --all-features -- -D warnings
