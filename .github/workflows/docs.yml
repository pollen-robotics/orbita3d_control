name: Deploy docs

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop

env:
    CARGO_TERM_COLOR: always

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false
  
jobs:
  build:
      runs-on: ubuntu-latest

      steps:
      - uses: actions/checkout@v3
      
      - name: Cache Cargo Dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: cargo-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            cargo-${{ runner.os }}-

      - name: Deps
        run: |
              sudo apt-get update
              sudo apt-get install -y libudev-dev

      - name: Setup Rust Toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true

      - name: Toolchain in  nightly mode
        run: |
          rustup component add rustfmt --toolchain nightly
          rustup component add clippy --toolchain nightly

      - name: Install protc
        run: sudo apt install -y protobuf-compiler libprotobuf-dev
        
      - name: Install Mercurial
        run: sudo apt-get install -y mercurial
        
      - name: Set up IgH repo
        run: |
          hg clone http://hg.code.sf.net/p/etherlabmaster/code ethercat-hg
          cd ethercat-hg
          hg update stable-1.5
          ./bootstrap
          ./configure --disable-8139too
        
      - name:  Build
        run: |
          ETHERCAT_PATH=$(pwd)/ethercat-hg cargo build -j $(nproc)

      - name: Setup Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Maturin
        run: |
          pip install --upgrade pip
          python -m venv env
          source env/bin/activate
          pip install maturin

          cd orbita3d_c_api
          export ETHERCAT_PATH=$(pwd)/ethercat-hg
          maturin develop

      - name: Build Docs
        run: |
          export ETHERCAT_PATH=$(pwd)/ethercat-hg 
          pip install pdoc 
          pip install -U cffi
          sh docs/generate_api_docs.sh
          
      - name: Upload Rust Docs
        uses: actions/upload-artifact@v4
        with:
          name: rust-docs
          path: docs/api
          retention-days: 1  # Keep for 1 days

  docs:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Download Rust Docs
        uses: actions/download-artifact@v4
        with:
          name: rust-docs
          path: docs/api

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
         
      - name: Install MkDocs and dependencies
        run: |
          cd docs
          pip install -r requirements.txt
      
      - name: Build MkDocs site
        run: |
          mkdocs build --site-dir site
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: site

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: docs
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4